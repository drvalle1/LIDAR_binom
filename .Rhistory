p1=100/300-((50/230)*(2/6))
p1*(6/4)
rm(list=ls())
library('lidR')
setwd('U:\independent studies\LIDAR\cauaxi edited\2012')
dat=read.csv('CAU XXX 2012 edited2.csv',as.is=T)
rm(list=ls())
setwd('U:\\independent studies\\LIDAR\\cauaxi edited\\2012')
dat=read.csv('CAU XXX 2012 edited2.csv',as.is=T)
head(dat)
rm(list=ls())
setwd('U:\\independent studies\\LIDAR\\cauaxi edited\\2012')
dat=read.csv('CAU XXX 2012 edited2.csv',as.is=T)
k=unique(dat[,c('xnew','ynew')])
setwd('U:\\independent studies\\LIDAR\\cauaxi edited')
write.csv(k,'coord.csv',row.names=F)
apply(k,2,range)
rm(list=ls())
setwd('U:\\independent studies\\LIDAR\\cauaxi edited\\2012')
dat=read.csv('CAU XXX 2012 edited2.csv',as.is=T)
k=unique(dat[,c('xnew','ynew')])
apply(k,2,range)
rm(list=ls())
setwd('U:\\independent studies\\LIDAR\\cauaxi edited\\2012')
dat=read.csv('CAU XXX 2012 edited2.csv',as.is=T)
bin.size=50
xuni=sort(unique(dat$xnew))
tmp=c(xuni-(bin.size/2),xuni+(bin.size/2))
xuni=sort(unique(tmp))
yuni=sort(unique(dat$ynew))
tmp=c(yuni-(bin.size/2),yuni+(bin.size/2))
yuni=sort(unique(tmp))
combo=expand.grid(xnew=xuni,ynew=yuni)
combo=expand.grid(xnew=xuni,ynew=yuni)
setwd('U:\\independent studies\\LIDAR\\cauaxi edited')
write.csv(combo,'coord.csv',row.names=F)
p=10
ybar=rnorm(p)
J=matrix(1,p,p)
J%*%ybar
mean(ybar)
p=10
ybar=rnorm(p)
J=matrix(1,p,p)
J%*%ybar/p
mean(ybar)
p=10
ybar=rnorm(p)
J=matrix(1,p,p)
ybar-mean(ybar)
(diag(1,p)-(J/p))%*%ybar
p=10
ybar=rnorm(p)
J=matrix(1,p,p)
res1=ybar-mean(ybar)
res2=(diag(1,p)-(J/p))%*%ybar
unique(res1-res2)
p=10
ybar=rnorm(p,mean=3,sd=10)
J=matrix(1,p,p)
res1=ybar-mean(ybar)
res2=(diag(1,p)-(J/p))%*%ybar
unique(res1-res2)
set.seed(1)
p=10
ybar=rnorm(p,mean=3,sd=10)
J=matrix(1,p,p)
res1=ybar-mean(ybar)
Mat=(diag(1,p)-(J/p))
res2=Mat%*%ybar
unique(res1-res2)
library('mvtnorm')
library('mvtnorm')
nsim=1000
y=rmvnorm(nsim,mean=rep(0,p),diag(10,p))
dim(y)
x=y-apply(y,1,mean)
apply(x,1,mean)
library('mvtnorm')
nsim=1000
Sigma=diag(10,p)
y=rmvnorm(nsim,mean=rep(0,p),Sigma)
x=y-apply(y,1,mean)
apply(x,1,mean)
cov1=var(X)
cov2=Mat%*%Sigma%*%t(Mat)
x=y-apply(y,1,mean)
apply(x,1,mean)
cov1=var(x)
cov2=Mat%*%Sigma%*%t(Mat)
cov1=var(x)
cov2=Mat%*%Sigma%*%t(Mat)
unique(cov1-cov2)
library('mvtnorm')
nsim=10000
Sigma=diag(10,p)
y=rmvnorm(nsim,mean=rep(0,p),Sigma)
x=y-apply(y,1,mean)
apply(x,1,mean)
cov1=var(x)
cov2=Mat%*%Sigma%*%t(Mat)
unique(cov1-cov2)
plot(cov1,cov2)
cov1=var(x)
cov2=Mat%*%Sigma%*%t(Mat)
rango=range(c(cov1,cov2))
plot(cov1,cov2,xlim=rango,ylim=rango)
lines(rango,rango,col='red')
rm(list=ls())
#testing matrix operation (I-J/p)
set.seed(1)
p=10
ybar=rnorm(p,mean=3,sd=10)
J=matrix(1,p,p)
res1=ybar-mean(ybar)
Mat=(diag(1,p)-(J/p))
res2=Mat%*%ybar
unique(res1-res2)
#testing covariance relationship
library('mvtnorm')
nsim=10000
# Sigma=diag(10,p)
W=matrix(rnorm(p*p),p,p)
Sigma=W%*%t(W)
y=rmvnorm(nsim,mean=rep(0,p),Sigma)
x=y-apply(y,1,mean)
apply(x,1,mean)
cov1=var(x)
cov2=Mat%*%Sigma%*%t(Mat)
rango=range(c(cov1,cov2))
plot(cov1,cov2,xlim=rango,ylim=rango)
lines(rango,rango,col='red')
rango=range(c(cov2,Sigma))
plot(cov2,Sigma,xlim=rango,ylim=rango)
lines(rango,rango,col='red')
library('mvtnorm')
nsim=10000
# Sigma=diag(10,p)
W=matrix(rnorm(p*p),p,p)
Sigma=W%*%t(W)
y=rmvnorm(nsim,mean=rep(0,p),Sigma)
x=y-apply(y,1,mean)
apply(x,1,mean)
cov1=var(x)
cov2=Mat%*%Sigma%*%t(Mat)
rango=range(c(cov1,cov2))
plot(cov1,cov2,xlim=rango,ylim=rango)
lines(rango,rango,col='red')
rango=range(c(cov2,Sigma))
plot(cov2,Sigma,xlim=rango,ylim=rango)
lines(rango,rango,col='red')
plot(cov1,cov2,xlim=rango,ylim=rango)
lines(rango,rango,col='red')
rango=range(c(cov2,Sigma))
plot(cov2,Sigma,xlim=rango,ylim=rango)
lines(rango,rango,col='red')
W=matrix(rnorm(p*p,mean=2,sd=3),p,p)
Sigma=W%*%t(W)
y=rmvnorm(nsim,mean=rep(0,p),Sigma)
x=y-apply(y,1,mean)
apply(x,1,mean)
cov1=var(x)
cov2=Mat%*%Sigma%*%t(Mat)
rango=range(c(cov1,cov2))
plot(cov1,cov2,xlim=rango,ylim=rango)
lines(rango,rango,col='red')
rango=range(c(cov2,Sigma))
plot(cov2,Sigma,xlim=rango,ylim=rango)
lines(rango,rango,col='red')
cov1=var(x)
cov2=Mat%*%Sigma%*%t(Mat)
rango=range(c(cov1,cov2))
plot(cov1,cov2,xlim=rango,ylim=rango)
lines(rango,rango,col='red')
rango=range(c(cov2,Sigma))
plot(cov2,Sigma,xlim=rango,ylim=rango)
lines(rango,rango,col='red')
rm(list=ls())
library('sf')
library('rgdal')
library('data.table')
library('readr')
#get Pinages data
setwd('U:\\independent studies\\LIDAR\\GIS CAU\\Pinages data')
pinages <- st_read("CAU_LoggingPlots_UTM22_SIRGAS2000.shp")
plot(pinages)
#potential pairs
# G2 (logging in 2010) e G3 (logging in 2013)
# G5 (logging in 2010) e F5 (logging in 2012)
#just keep what I need
# cond=pinages$UT%in%c('F5','G2','G3','G4','G5')
cond=pinages$UT%in%c('G2','G3')
pinages1=pinages[cond, ,]
plot(pinages1)
#get coordinate system (following instructions from https://www.slideshare.net/vitor_vasconcelos/dados-espaciais-em-r)
EPSG=make_EPSG()
ind=grep('SIRGAS 2000 / UTM zone 22S',EPSG$note)
sirgas.2000=EPSG[ind,'prj4']
#change coordinates for pinages1
pinages2=st_transform(pinages1,sirgas.2000)
anos=c(2017)
for (i in 1:length(anos)){
print(i)
nome.dir=paste0('U:\\independent studies\\LIDAR\\cauaxi edited\\',anos[i])
setwd(nome.dir)
nome.arq=paste0('CAU ',anos[i],' edited1.csv')
dat=read.csv(nome.arq,as.is=T)
#check if something is funny with coordinates
X=sort(unique(dat[,'X'])); nx=unique(diff(X))
Y=sort(unique(dat[,'Y'])); ny=unique(diff(Y))
print(c(nx,ny))
#get coordinates
coord=dat[,c('X','Y')]
coord$id=1:nrow(coord)
coord1=st_as_sf(coord, coords = c('X', 'Y'), crs = sirgas.2000)
#perform intersection
coord2 <- st_intersection(coord1, pinages2); dim(coord1); dim(coord2)
# coord3 = st_coordinates(coord2)
# plot(Y~X,data=coord3)
#just keep relevant pieces
dat1=dat[coord2$id,]
#check if something is funny with coordinates
X=sort(unique(dat1[,'X'])); nx=unique(diff(X))
Y=sort(unique(dat1[,'Y'])); ny=unique(diff(Y))
print(c(nx,ny))
#export results
nome.arq=paste0('CAU ',anos[i],' edited2.csv')
readr::write_csv(dat1, nome.arq)
}
plot(dat1$X,dat1$Y)
rm(list=ls())
library('sf')
library('rgdal')
library('data.table')
library('readr')
#get Pinages data
setwd('U:\\independent studies\\LIDAR\\GIS CAU\\Pinages data')
pinages <- st_read("CAU_LoggingPlots_UTM22_SIRGAS2000.shp")
plot(pinages)
#potential pairs
# G2 (logging in 2010) e G3 (logging in 2013)
# G5 (logging in 2010) e F5 (logging in 2012)
#just keep what I need
cond=pinages$UT%in%c('F5','G2','G3','G4','G5')
# cond=pinages$UT%in%c('G2','G3')
pinages1=pinages[cond, ,]
plot(pinages1)
#get coordinate system (following instructions from https://www.slideshare.net/vitor_vasconcelos/dados-espaciais-em-r)
EPSG=make_EPSG()
ind=grep('SIRGAS 2000 / UTM zone 22S',EPSG$note)
sirgas.2000=EPSG[ind,'prj4']
#change coordinates for pinages1
pinages2=st_transform(pinages1,sirgas.2000)
anos=c(2017)
for (i in 1:length(anos)){
print(i)
nome.dir=paste0('U:\\independent studies\\LIDAR\\cauaxi edited\\',anos[i])
setwd(nome.dir)
nome.arq=paste0('CAU ',anos[i],' edited1.csv')
dat=read.csv(nome.arq,as.is=T)
#check if something is funny with coordinates
X=sort(unique(dat[,'X'])); nx=unique(diff(X))
Y=sort(unique(dat[,'Y'])); ny=unique(diff(Y))
print(c(nx,ny))
#get coordinates
coord=dat[,c('X','Y')]
coord$id=1:nrow(coord)
coord1=st_as_sf(coord, coords = c('X', 'Y'), crs = sirgas.2000)
#perform intersection
coord2 <- st_intersection(coord1, pinages2); dim(coord1); dim(coord2)
# coord3 = st_coordinates(coord2)
# plot(Y~X,data=coord3)
#just keep relevant pieces
dat1=dat[coord2$id,]
#check if something is funny with coordinates
X=sort(unique(dat1[,'X'])); nx=unique(diff(X))
Y=sort(unique(dat1[,'Y'])); ny=unique(diff(Y))
print(c(nx,ny))
#export results
nome.arq=paste0('CAU ',anos[i],' edited2.csv')
readr::write_csv(dat1, nome.arq)
}
plot(dat1$X,dat1$Y)
rm(list=ls())
library('readr')
anos=c(2017)
nome.dir=paste0('U:\\independent studies\\LIDAR\\cauaxi edited\\',anos)
setwd(nome.dir)
nome.arq=paste0('CAU ',anos,' edited2.csv')
dat=read.csv(nome.arq,as.is=T)
#points per location
ind=grep('z',colnames(dat))
coord=dat[,-ind]
zmat=dat[,ind]
soma=apply(zmat,1,sum)
sum(soma)
hist(soma)
median(soma)
rm(list=ls())
library('readr')
anos=c(2017)
nome.dir=paste0('U:\\independent studies\\LIDAR\\cauaxi edited\\',anos)
setwd(nome.dir)
nome.arq=paste0('CAU ',anos,' edited2.csv')
dat=read.csv(nome.arq,as.is=T)
#points per location
ind=grep('z',colnames(dat))
coord=dat[,-ind]
zmat=dat[,ind]
soma=apply(zmat,1,sum)
sum(soma)
hist(soma)
median(soma)
#at least 100 returns per pixel
cond=soma >= 100; mean(cond)
z=y=zmat[cond,]; coord1=coord[cond,]
nloc=nrow(y)
ncat=ncol(y)
#get n matrix
n=matrix(NA,nloc,ncat)
for (i in ncat:2){
n[,i]=rowSums(z)
z=z[,-i]
}
unique(z-y[,1])
#get names
colnames(n)=colnames(y)
#look at results
prob=y/n
ind=sample(1:nloc,size=9)
par(mfrow=c(3,3),mar=rep(1,4))
for (i in 1:9) plot(as.numeric(prob[ind[i],]),type='h')
#export results
n1=cbind(coord1,n[,-1]); sum(n1)
y1=cbind(coord1,y[,-1])
plot(coord$X,coord$Y)
setwd('U:\\independent studies\\LIDAR\\cauaxi edited\\2017')
write.csv(n1,'n.csv',row.names=F)
write.csv(y1,'y.csv',row.names=F)
rm(list=ls())
library('sf')
library('rgdal')
library('data.table')
library('readr')
#get Pinages data
setwd('U:\\independent studies\\LIDAR\\GIS CAU\\Pinages data')
pinages <- st_read("CAU_LoggingPlots_UTM22_SIRGAS2000.shp")
plot(pinages)
#potential pairs
# G2 (logging in 2010) e G3 (logging in 2013)
# G5 (logging in 2010) e F5 (logging in 2012)
#just keep what I need
# cond=pinages$UT%in%c('F5','G2','G3','G4','G5')
cond=pinages$UT%in%c('G2','G3')
pinages1=pinages[cond, ,]
plot(pinages1)
#get coordinate system (following instructions from https://www.slideshare.net/vitor_vasconcelos/dados-espaciais-em-r)
EPSG=make_EPSG()
ind=grep('SIRGAS 2000 / UTM zone 22S',EPSG$note)
sirgas.2000=EPSG[ind,'prj4']
#change coordinates for pinages1
pinages2=st_transform(pinages1,sirgas.2000)
anos=c(2017)
for (i in 1:length(anos)){
print(i)
nome.dir=paste0('U:\\independent studies\\LIDAR\\cauaxi edited\\',anos[i])
setwd(nome.dir)
nome.arq=paste0('CAU ',anos[i],' edited1.csv')
dat=read.csv(nome.arq,as.is=T)
#check if something is funny with coordinates
X=sort(unique(dat[,'X'])); nx=unique(diff(X))
Y=sort(unique(dat[,'Y'])); ny=unique(diff(Y))
print(c(nx,ny))
#get coordinates
coord=dat[,c('X','Y')]
coord$id=1:nrow(coord)
coord1=st_as_sf(coord, coords = c('X', 'Y'), crs = sirgas.2000)
#perform intersection
coord2 <- st_intersection(coord1, pinages2); dim(coord1); dim(coord2)
# coord3 = st_coordinates(coord2)
# plot(Y~X,data=coord3)
#just keep relevant pieces
dat1=dat[coord2$id,]
#check if something is funny with coordinates
X=sort(unique(dat1[,'X'])); nx=unique(diff(X))
Y=sort(unique(dat1[,'Y'])); ny=unique(diff(Y))
print(c(nx,ny))
#export results
nome.arq=paste0('CAU ',anos[i],' edited2.csv')
readr::write_csv(dat1, nome.arq)
}
plot(dat1$X,dat1$Y)
rm(list=ls())
library('readr')
anos=c(2017)
nome.dir=paste0('U:\\independent studies\\LIDAR\\cauaxi edited\\',anos)
setwd(nome.dir)
nome.arq=paste0('CAU ',anos,' edited2.csv')
dat=read.csv(nome.arq,as.is=T)
#points per location
ind=grep('z',colnames(dat))
coord=dat[,-ind]
zmat=dat[,ind]
soma=apply(zmat,1,sum)
sum(soma)
hist(soma)
median(soma)
#at least 100 returns per pixel
cond=soma >= 100; mean(cond)
z=y=zmat[cond,]; coord1=coord[cond,]
nloc=nrow(y)
ncat=ncol(y)
#get n matrix
n=matrix(NA,nloc,ncat)
for (i in ncat:2){
n[,i]=rowSums(z)
z=z[,-i]
}
unique(z-y[,1])
#get names
colnames(n)=colnames(y)
#look at results
prob=y/n
ind=sample(1:nloc,size=9)
par(mfrow=c(3,3),mar=rep(1,4))
for (i in 1:9) plot(as.numeric(prob[ind[i],]),type='h')
#export results
n1=cbind(coord1,n[,-1]); sum(n1)
y1=cbind(coord1,y[,-1])
plot(coord$X,coord$Y)
setwd('U:\\independent studies\\LIDAR\\cauaxi edited\\2017')
write.csv(n1,'n.csv',row.names=F)
write.csv(y1,'y.csv',row.names=F)
rm(list=ls())
set.seed(23)
setwd('U:\\independent studies\\LIDAR\\cauaxi edited\\2017')
n1=read.csv('n.csv');
y1=read.csv('y.csv')
ind=which(colnames(n1)%in%c('X','Y')); n2=n1[,-ind]
ind=which(colnames(y1)%in%c('X','Y')); y2=y1[,-ind]
coord=y1[,ind];
prob=y2/n2
hist(data.matrix(n2))
#reduce number of points
npoints=100
cond=n2>npoints; mean(cond)
n2[cond]=npoints
y2[cond]=rbinom(sum(cond),size=npoints,prob=prob[cond])
sum(n2)
mean(y2<n2)
mean(y2<=n2)
image(data.matrix(y2/n2))
#export results
write.csv(cbind(coord[cond,],y2[cond,]),'y1.csv',row.names=F)
write.csv(cbind(coord[cond,],n2[cond,]),'n1.csv',row.names=F)
rm(list=ls(all=TRUE))
library('Rcpp')
set.seed(59)
#get functions
setwd('U:\\GIT_models\\LIDAR_binom')
sourceCpp('teste.cpp')
#basic settings
nobs=100000
ngrp=10
niter=100
res=numeric()
i=1
tmp=runif(ngrp)
prob=tmp/sum(tmp)
k=rmultinom_1(probs=prob, size=nobs)
cbind(prob,k/sum(k))
rm(list=ls(all=TRUE))
library('Rcpp')
set.seed(59)
#get functions
setwd('U:\\GIT_models\\LIDAR_binom')
sourceCpp('teste.cpp')
#basic settings
nobs=100000
ngrp=10
niter=100
#test to see if it works
res=numeric()
for (i in 1:niter){
tmp=runif(ngrp)
prob=tmp/sum(tmp)
k=rmultinom_1(probs=prob, size=nobs)
tmp=cbind(prob,k/sum(k))
res=rbind(res,tmp)
}
plot(res[,2],res[,1])
plot(res[,2],res[,1])
hist(res[,2]-res[,1])
